version: '3.8'
name: csai-test-environment

services:
  # End-to-end testing service using Playwright
  e2e:
    image: mcr.microsoft.com/playwright:v1.38.0
    environment:
      - NODE_ENV=test
      - TEST_BASE_URL=http://web:3000
      - API_URL=http://api:8000
      - BROWSER=chromium
      - CI=${CI:-false}
      - DEBUG=${DEBUG:-false}
    volumes:
      - ./src/e2e:/tests/e2e
      - ./playwright.config.ts:/tests/playwright.config.ts
      - ./test-results:/tests/test-results
    depends_on:
      api:
        condition: service_healthy
      web:
        condition: service_started
    networks:
      - test_network
    command: npx playwright test --config=playwright.config.ts
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
        reservations:
          cpus: '1'
          memory: 2G

  # Performance testing service using k6
  k6:
    image: grafana/k6:0.45.0
    environment:
      - K6_OUT=influxdb=http://influxdb:8086/k6
      - TARGET_URL=http://api:8000
      - K6_BROWSER_ENABLED=true
      - K6_PROMETHEUS_RW_SERVER_URL=http://prometheus:9090/api/v1/write
    volumes:
      - ./src/performance:/scripts
      - ./k6.config.ts:/scripts/k6.config.ts
    depends_on:
      api:
        condition: service_healthy
      influxdb:
        condition: service_healthy
    networks:
      - test_network
    command: run /scripts/scenarios/api-endpoints.ts
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 1G

  # InfluxDB for storing performance metrics
  influxdb:
    image: influxdb:2.7-alpine
    environment:
      - INFLUXDB_DB=k6
      - INFLUXDB_HTTP_AUTH_ENABLED=false
      - INFLUXDB_REPORTING_DISABLED=true
      - INFLUXDB_ADMIN_USER=${INFLUXDB_ADMIN_USER:-admin}
      - INFLUXDB_ADMIN_PASSWORD=${INFLUXDB_ADMIN_PASSWORD:-admin}
    ports:
      - "8086:8086"
    volumes:
      - influxdb_data:/var/lib/influxdb
    networks:
      - test_network
    healthcheck:
      test: ["CMD", "influx", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  # Grafana for visualizing performance metrics
  grafana:
    image: grafana/grafana:10.0.3
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_BASIC_ENABLED=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      influxdb:
        condition: service_healthy
    networks:
      - test_network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  # Import backend services from main docker-compose
  api:
    extends:
      file: ../backend/docker-compose.yml
      service: api
    environment:
      - APP_ENV=test
      - DEBUG=true
    networks:
      - test_network

  web:
    image: node:18-alpine
    environment:
      - NODE_ENV=test
      - API_URL=http://api:8000
    volumes:
      - ../web:/app
    working_dir: /app
    command: npm run dev
    networks:
      - test_network
    depends_on:
      - api
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  influxdb_data:
    name: csai_test_influxdb_data
  grafana_data:
    name: csai_test_grafana_data

networks:
  test_network:
    driver: bridge
    name: csai_test_network
    driver_opts:
      com.docker.network.bridge.name: csai_test_br